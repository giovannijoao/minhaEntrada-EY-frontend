// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(auto()) @map("_id") @db.ObjectId
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  email               String                @unique
  firstName           String
  lastName            String
  password            String
  JornadaSubscription JornadaSubscription[]
  AulaProgress        AulaProgress[]
}

model JornadaSubscription {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  userId       String         @db.ObjectId
  jornadaId    Int
  AulaProgress AulaProgress[]
}

model Answer {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  aulaId         Int
  question       Int
  answers        Int[]
  AulaProgress   AulaProgress? @relation(fields: [aulaProgressId], references: [id])
  aulaProgressId String?       @db.ObjectId
}

model AulaProgress {
  id                    String              @id @default(auto()) @map("_id") @db.ObjectId
  created_at            DateTime            @default(now())
  updated_at            DateTime            @updatedAt
  user                  User                @relation(fields: [userId], references: [id])
  userId                String              @db.ObjectId
  jornadaSubscription   JornadaSubscription @relation(fields: [jornadaSubscriptionId], references: [id])
  jornadaSubscriptionId String              @db.ObjectId
  trilhaId              Int
  aulaId                Int
  isFinished            Boolean             @default(false)
  activityId            Int?
  answers               Answer[]
  totalQuestions        Int?
  totalCorrect          Int?
}
